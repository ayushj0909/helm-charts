name: Helm Publish
on:
  push:
    branches: [ 'main', 'feat/ghcr-release-workflow' ]
jobs:
  setup:
    name: Setup Helm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.16.0

  package:
    name: Package Helm Charts
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find Changed Charts
        id: find-charts
        shell: bash
        run: |
          # Find which charts have changed based on 'Chart.yaml'
          CHANGED_CHARTS=$(git diff --name-only HEAD~1 HEAD | grep '^charts/.*/Chart.yaml' | sed -r 's|/Chart.yaml||')
          if [ -z "$CHANGED_CHARTS" ]; then
            echo "No chart changes detected."
            echo "CHARTS_CHANGED=false" >> $GITHUB_ENV
          else
            echo "Changed charts: $CHANGED_CHARTS"
            echo "CHARTS_CHANGED=true" >> $GITHUB_ENV
            echo "$CHANGED_CHARTS" > changed_charts.txt
          fi

      - name: Package Helm Charts
        if: env.CHARTS_CHANGED == 'true'
        shell: bash
        run: |
          mkdir -p dist
          while IFS= read -r chart; do
              helm dep up "$chart"
              helm package "$chart" -u -d dist
          done < changed_charts.txt

      - name: Archive dist directory
        uses: actions/upload-artifact@v4
        with:
          name: packaged-charts
          path: dist

  push:
    name: Push Helm Charts to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: package
    steps:
      - name: Login to GitHub Container Registry
        shell: bash
        run: echo "${GITHUB_TOKEN}" | helm registry login ${REGISTRY} --username "${GITHUB_ACTOR}" --password-stdin
        env:
          REGISTRY: "ghcr.io/${{ github.repository }}"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}

      - name: Download packaged charts
        uses: actions/download-artifact@v4
        with:
          name: packaged-charts
          path: dist

      - name: Push packages
        shell: bash
        working-directory: dist
        run: |
          for f in *.tgz ; do
              echo "$f"
              helm push "$f" "oci://${REGISTRY}"
          done
        env:
          REGISTRY: "ghcr.io/${{ github.repository }}"
