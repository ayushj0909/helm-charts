apiVersion: v1
kind: ConfigMap
metadata:
  name: vmagent-config
data:
  scrape.yml: |
    global:
      scrape_interval: 10s
    scrape_configs:
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-nodes
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - replacement: kubernetes.default.svc:443
            target_label: __address__
          - regex: (.+)
            replacement: /api/v1/nodes/$1/proxy/metrics
            source_labels:
              - __meta_kubernetes_node_name
            target_label: __metrics_path__
          - source_labels: [ instance ]
            target_label: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        honor_timestamps: false
        job_name: kubernetes-nodes-cadvisor
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - replacement: kubernetes.default.svc:443
            target_label: __address__
          - regex: (.+)
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
            source_labels:
              - __meta_kubernetes_node_name
            target_label: __metrics_path__
          - source_labels: [ instance ]
            target_label: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
      - job_name: node-exporter
        honor_labels: false
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              {{- if .Values.sdConfig.nodeExporter.namespaces}}
              {{- range .Values.sdConfig.nodeExporter.namespaces}}
              - {{ . }}
              {{- end}}
              {{- else }}
              - {{ .Release.Namespace }}
              {{- end}}
        relabel_configs:
          - action: keep
            source_labels:
              - __meta_kubernetes_service_label_app_kubernetes_io_name
            regex: {{ .Values.sdConfig.nodeExporter.name | default "prometheus-node-exporter"}}
          - action: keep
            source_labels:
              - __meta_kubernetes_endpoint_port_name
            regex: {{ .Values.sdConfig.nodeExporter.metricsPortName | default "metrics"}}
          - source_labels:
              - __meta_kubernetes_endpoint_address_target_kind
              - __meta_kubernetes_endpoint_address_target_name
            separator: ;
            regex: Node;(.*)
            replacement: ${1}
            target_label: node
          - source_labels:
              - __meta_kubernetes_endpoint_address_target_kind
              - __meta_kubernetes_endpoint_address_target_name
            separator: ;
            regex: Pod;(.*)
            replacement: ${1}
            target_label: pod
          - source_labels:
              - __meta_kubernetes_pod_name
            target_label: pod
          - source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container
          - source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            target_label: service
          - source_labels:
              - __meta_kubernetes_service_name
            target_label: job
            replacement: ${1}
          - source_labels:
              - __meta_kubernetes_service_label_jobLabel
            target_label: job
            regex: (.+)
            replacement: ${1}
          - target_label: endpoint
            replacement: metrics
          - source_labels: [ __meta_kubernetes_endpoint_node_name ]
            target_label: node
        metric_relabel_configs:
          - source_labels:
              - mountpoint
            regex: /var/lib/kubelet/pods.+
            action: drop
      - job_name: prometheus-kube-state-metrics
        honor_labels: true
        relabel_configs:
          - action: keep
            source_labels: [ __meta_kubernetes_service_label_app_kubernetes_io_instance ]
            regex: {{ .Values.sdConfig.kubeStateMetrics.instance }}
          - action: keep
            source_labels: [ __meta_kubernetes_service_label_app_kubernetes_io_name ]
            regex: {{ .Values.sdConfig.kubeStateMetrics.name | default "kube-state-metrics"}}
          - action: keep
            source_labels: [ __meta_kubernetes_endpoint_port_name ]
            regex: http
          - source_labels: [ __meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name ]
            separator: ;
            target_label: node
            regex: Node;(.*)
            replacement: ${1}
          - source_labels: [ __meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name ]
            separator: ;
            target_label: pod
            regex: Pod;(.*)
            replacement: ${1}
          - source_labels: [ __meta_kubernetes_pod_name ]
            target_label: pod
          - source_labels: [ __meta_kubernetes_pod_container_name ]
            target_label: container
          - source_labels: [ __meta_kubernetes_namespace ]
            target_label: namespace
          - source_labels: [ __meta_kubernetes_service_name ]
            target_label: service
          - source_labels: [ __meta_kubernetes_service_name ]
            target_label: job
            replacement: ${1}
          - source_labels: [ __meta_kubernetes_service_label_app_kubernetes_io_name ]
            target_label: job
            regex: (.+)
            replacement: ${1}
          - target_label: endpoint
            replacement: http
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              own_namespace: false
              names:
                {{- if .Values.sdConfig.kubeStateMetrics.namespaces}}
                {{- range .Values.sdConfig.kubeStateMetrics.namespaces}}
                - {{ . }}
                {{- end }}
                {{- else}}
                - {{ .Release.Namespace }}
                {{- end}}
  global-relabel.yml: |
    - target_label: "amnic_installation_id"
      replacement: {{ required "Installation ID is required" .Values.amnic_installationID | quote}}
    - target_label: "amnic_cluster_id"
      replacement: {{ required "Cluster ID is required" .Values.amnic_clusterID | quote}}
    - source_labels: [__name__, job, app_kubernetes_io_name]
      regex: {{ required "Regular expression missing!" .Values.amnic_metricsRegex }}
      action: "keep"